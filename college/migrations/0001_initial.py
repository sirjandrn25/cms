# Generated by Django 3.0.7 on 2020-11-10 01:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('staff', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('Cid', models.AutoField(primary_key=True, serialize=False)),
                ('Cname', models.CharField(max_length=150)),
                ('Cduration', models.IntegerField(default=4)),
                ('degree_level', models.CharField(choices=[('+2', '+2'), ('developma', 'Developma'), ('bachler', 'Bachler'), ('master', 'Master')], default=1, max_length=150)),
                ('department', models.CharField(choices=[('science', 'Science'), ('management', 'Management'), ('other', 'Other')], default=1, max_length=50)),
                ('seats', models.IntegerField(default=48)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('StuId', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('birth_date', models.DateField()),
                ('address', models.CharField(max_length=150)),
                ('phone_no', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=150)),
                ('avatar', models.ImageField(upload_to='avatar/')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subId', models.AutoField(primary_key=True, serialize=False)),
                ('subName', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(default='default/default-user-img.png', upload_to='profile/')),
                ('bio', models.TextField(blank=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default=1, max_length=150)),
                ('location', models.CharField(blank=True, max_length=150)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('rollno', models.CharField(blank=True, max_length=100)),
                ('passout', models.BooleanField(default=False)),
                ('leave', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.Course')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='college.Student')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(choices=[('1', 'First Year'), ('2', 'Second Year'), ('3', 'Third Year'), ('4', 'Fourth Year'), ('5', 'Fifth Year')], default=1, max_length=10)),
                ('part', models.CharField(blank=True, choices=[('1', 'First Part'), ('2', 'Second Part')], max_length=10)),
                ('course', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='college.Course')),
                ('subject', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='college.Subject')),
            ],
            options={
                'unique_together': {('course', 'subject')},
            },
        ),
    ]
